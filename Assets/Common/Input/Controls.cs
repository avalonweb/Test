//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Common/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""a3013c84-0b7d-4bfe-b649-ddf73b7b4e7b"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""25e2963c-1a78-4455-a05f-4f82f0e8a8c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2c28168a-0663-435f-b3c3-d2cb6e23c1ce"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""e67da829-ddb9-4695-9257-5e06e2c5d3da"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BrightnessUp"",
                    ""type"": ""Button"",
                    ""id"": ""49169bf4-87cf-4a29-b1c2-325252282d40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BrightnessDown"",
                    ""type"": ""Button"",
                    ""id"": ""8faf41c8-80fb-4016-8bf1-8b6c0cd7dbb8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""68b229bc-3fbd-4246-94d6-b221cb047fd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""8254a0a8-a966-46fc-9f0d-cf9f599006dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbClickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""e1bda144-6fb3-446f-9112-531e1fe15fe3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbClickRight"",
                    ""type"": ""Button"",
                    ""id"": ""81f7b85a-b8c3-4840-be90-4f8ca6dd74e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""1a16425c-cd4d-4cf9-b5e1-d27619b16233"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e1e029d5-f3f4-458d-95f5-c534d3a772f5"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33ceb0ac-cdb8-4a8f-975c-5557970b6ec3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fea6e54e-f76c-4865-9efe-7eb5331728a3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""27fe0870-4c7b-41bf-b964-9f1aadd919a7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""24fc0fd2-c4af-4f98-bd49-23dfa611605e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""73c4e2cc-7f7d-4c0d-bf52-ac58000ebca9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4f5688e2-2c2f-42e8-9b12-07c0765223a4"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8b9df3a6-4730-44d5-bc44-4314c1aef37e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""36f07a44-7848-4aba-ad07-e534648fe076"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a7f3799d-01e0-4d5c-92a7-0d346dab1b06"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9174ae52-1f21-488b-89b0-7e2d30c7e5da"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dd27610-fe8e-4045-911f-4b2b5edf10b1"",
                    ""path"": ""<XRController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4cd0af42-4e43-41f3-a544-789a57b263b3"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BrightnessUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f98b8264-ef6f-497f-8273-972ed3b5d953"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BrightnessDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4037c3cc-bd93-4dd5-bda5-6beda24550ae"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7036841a-44f8-42ee-9a1e-daa8f225d326"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39e79b46-9268-41c9-9012-276950dc8821"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/thumbstickclicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbClickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d22a9d7-b0f9-41a4-b771-fb67c961eac2"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/thumbstickclicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbClickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Setup"",
            ""id"": ""45424eea-b121-43ee-b98c-ecb57f660ec7"",
            ""actions"": [
                {
                    ""name"": ""RotateXY"",
                    ""type"": ""Button"",
                    ""id"": ""fe293e75-f3c2-429b-a11a-bb02fe1385ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateZoom"",
                    ""type"": ""Button"",
                    ""id"": ""05acdd83-6aa9-448c-bf29-03e657e82549"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BrightnessUp"",
                    ""type"": ""Button"",
                    ""id"": ""7ea644a5-cd88-4b8e-b054-cb6b46e0fe07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BrightnessDown"",
                    ""type"": ""Button"",
                    ""id"": ""bf35ad72-69fb-4118-8331-d77d6be8759d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""57b33600-b4de-41df-9d62-2404d267ec83"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""0667a564-730e-4c62-867a-180059235c82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightTrigger"",
                    ""type"": ""Button"",
                    ""id"": ""daa1b78d-bd82-4258-944f-4486c964d406"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9bea7b5d-1d13-4c42-8a6d-71aaa7cf634c"",
                    ""path"": ""<XRController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateXY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffce9724-6a4d-4d43-a524-96120b11895f"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d34de278-adbf-4a0c-83f2-b39e7cc32ccc"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BrightnessUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92172610-75e4-4a05-9337-1afa4d238a9c"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BrightnessDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""802e842a-6b8f-4595-aa25-881f99445a6e"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a545205-e4b5-4c36-9def-3b86dca7d4ce"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c7c45ee-125a-4696-bd25-43193c74c3fb"",
                    ""path"": ""<XRController>{RightHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Common"",
            ""id"": ""4288ae5e-4b64-46d6-b9b4-9cd6c6e27346"",
            ""actions"": [
                {
                    ""name"": ""ThumbStickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2c276d5a-6b0d-44b3-95f4-4e97cf4b025e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbStickRight"",
                    ""type"": ""Button"",
                    ""id"": ""feffd44d-55e9-44e2-916d-d0a94a77c920"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YButton"",
                    ""type"": ""Button"",
                    ""id"": ""031aa639-6cec-4018-9235-1efcea06f84d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""XButton"",
                    ""type"": ""Button"",
                    ""id"": ""908a54e8-be18-4d17-a7a4-90355a927003"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AButton"",
                    ""type"": ""Button"",
                    ""id"": ""174d6073-e685-4d2d-b58d-cea81542da1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BButton"",
                    ""type"": ""Button"",
                    ""id"": ""8bb205fc-11bc-4e48-8f78-7bf643dd93a6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainTriggerRight"",
                    ""type"": ""Button"",
                    ""id"": ""83eb9230-30ca-429b-8543-b3de6c44da06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainTriggerLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2d5e828b-4b82-4a13-afe5-26d5903cc6c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripRight"",
                    ""type"": ""Value"",
                    ""id"": ""ccc5e867-3e48-4bb6-9154-9692be83030a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GripLeft"",
                    ""type"": ""Value"",
                    ""id"": ""d9410a55-b119-4dcb-817a-62e88d06995c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickClickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""986fe8a8-7e8e-426d-8b1e-6f22a8f75dd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbStickClickRight"",
                    ""type"": ""Button"",
                    ""id"": ""cea63f4c-e298-4a9b-974f-bbd871d39fbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""06cbfd47-4995-453a-b23c-233407f712b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""17bb1a55-0f08-4cc0-bf2e-334d768ad632"",
                    ""path"": ""<XRController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3ba2012-584f-4d87-946f-fa116596fafe"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""009b2fae-3f49-4560-bb24-53ffff815d12"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""643c09fa-412b-4345-8617-c6a269ba29b6"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""XButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7f1451c9-dfa6-4f54-a0e7-19a8b5a1c549"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdfb7590-e291-4220-86bc-7a0f88f5c598"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6733ab52-a9c7-4dd6-a9c4-b8f7c1583408"",
                    ""path"": ""<XRController>{RightHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainTriggerRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2dabc42-a75c-4f16-84e6-d2e6a2868f4c"",
                    ""path"": ""<XRController>{LeftHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainTriggerLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c1e9fa2-1c8c-4dc7-bd19-970fc3ba9b89"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff6131af-85ae-4544-a134-563fb86a7808"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e415bca-b3ed-4e74-8d0f-8f575c2be2c0"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/thumbstickclicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickClickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f324939-5bee-4709-9d0f-4b5088bc1edc"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/thumbstickclicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickClickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72fc03b6-3d4e-4106-8105-658b5044a086"",
                    ""path"": ""<OculusTouchController>{LeftHand}/menu"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Tetris"",
            ""id"": ""b225aaa4-3510-447e-92ed-9bd7d94a95dd"",
            ""actions"": [
                {
                    ""name"": ""ThumbStickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""27d0bd6e-ff75-4215-9436-8090c0ab57d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbStickRight"",
                    ""type"": ""Button"",
                    ""id"": ""846bc670-f4d3-40c3-b72a-def1ad3360e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YButton"",
                    ""type"": ""Button"",
                    ""id"": ""c51cf0b2-6b0f-4e25-aa77-078c55240357"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""XButton"",
                    ""type"": ""Button"",
                    ""id"": ""1b3a7eb1-cc0f-47d0-b76d-833851e3196a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AButton"",
                    ""type"": ""Button"",
                    ""id"": ""e88bc6e8-b3ad-4469-bfc5-1a72fefbd07c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BButton"",
                    ""type"": ""Button"",
                    ""id"": ""5b97e317-da5a-46c6-9efa-7808033eee14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainTriggerRight"",
                    ""type"": ""Button"",
                    ""id"": ""b4bd70c8-e9f8-46bb-aa4c-848fb428eb0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainTriggerLeft"",
                    ""type"": ""Button"",
                    ""id"": ""44769aee-2633-4bf2-ae2b-9d8b30c953f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GripRight"",
                    ""type"": ""Value"",
                    ""id"": ""3258b007-15d1-41b5-b437-7876791a1240"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GripLeft"",
                    ""type"": ""Value"",
                    ""id"": ""ccec73e4-5d07-471e-9120-46320edd5a1b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbStickClickLeft"",
                    ""type"": ""Button"",
                    ""id"": ""a33b05f9-7135-402b-898b-76d89298b2ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ThumbStickClickRight"",
                    ""type"": ""Button"",
                    ""id"": ""a16384ea-e5e8-4af7-a13c-373a34d4c7bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""a1261551-5b14-4e4d-9de4-261834601992"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""9f3764dc-f22f-4b8c-b3a2-b91594197b79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""3ef6b437-9ca9-48ac-a84b-8484d86a461c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""4a5b33af-9515-4511-9ab8-6888e4de8118"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""407df0f7-0094-47dc-8ab0-d0317711e2d4"",
                    ""path"": ""<XRController>{LeftHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""569b79ac-a0ef-42c1-9c3f-b559bc5bdd46"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ce55a9d-54ce-4bee-852f-1808be4bff3a"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""YButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cab362fa-4f70-498b-9276-53fad0265db0"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""XButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9349b424-4dc4-471e-8c3e-17972c5e82e7"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/primarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ba5a573-0406-44f4-a5f5-2635f3ec2b91"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/secondarybutton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""376d9c81-4d26-429d-b9a3-bdff56739272"",
                    ""path"": ""<XRController>{RightHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainTriggerRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""966f347b-7b61-43eb-b9f8-5c36819d6498"",
                    ""path"": ""<XRController>{LeftHand}/triggerButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainTriggerLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""870634ab-4995-483b-a702-8f40cc0f8502"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37edac6b-0ee5-40cb-8031-19fb7af7636c"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GripLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d74dd10-8aa6-49fd-8be8-e46405adc074"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{LeftHand}/thumbstickclicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickClickLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""016b2c32-3c78-4265-9e5c-0da56db6ecc4"",
                    ""path"": ""<XRInputV1::Oculus::OculusTouchControllerOpenXR>{RightHand}/thumbstickclicked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ThumbStickClickRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fef8710a-4dcc-49c9-b32e-eb76f2ad32f6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f0cc3bb-3977-4659-b9fe-9b80a8e90beb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9adc7de-9906-4d8c-aee4-e3b151aff5a1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a681554-273d-4935-839d-1f3c8fcb6a55"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Camera = m_Player.FindAction("Camera", throwIfNotFound: true);
        m_Player_BrightnessUp = m_Player.FindAction("BrightnessUp", throwIfNotFound: true);
        m_Player_BrightnessDown = m_Player.FindAction("BrightnessDown", throwIfNotFound: true);
        m_Player_ButtonB = m_Player.FindAction("ButtonB", throwIfNotFound: true);
        m_Player_ButtonA = m_Player.FindAction("ButtonA", throwIfNotFound: true);
        m_Player_ThumbClickLeft = m_Player.FindAction("ThumbClickLeft", throwIfNotFound: true);
        m_Player_ThumbClickRight = m_Player.FindAction("ThumbClickRight", throwIfNotFound: true);
        // Setup
        m_Setup = asset.FindActionMap("Setup", throwIfNotFound: true);
        m_Setup_RotateXY = m_Setup.FindAction("RotateXY", throwIfNotFound: true);
        m_Setup_RotateZoom = m_Setup.FindAction("RotateZoom", throwIfNotFound: true);
        m_Setup_BrightnessUp = m_Setup.FindAction("BrightnessUp", throwIfNotFound: true);
        m_Setup_BrightnessDown = m_Setup.FindAction("BrightnessDown", throwIfNotFound: true);
        m_Setup_ButtonA = m_Setup.FindAction("ButtonA", throwIfNotFound: true);
        m_Setup_ButtonB = m_Setup.FindAction("ButtonB", throwIfNotFound: true);
        m_Setup_RightTrigger = m_Setup.FindAction("RightTrigger", throwIfNotFound: true);
        // Common
        m_Common = asset.FindActionMap("Common", throwIfNotFound: true);
        m_Common_ThumbStickLeft = m_Common.FindAction("ThumbStickLeft", throwIfNotFound: true);
        m_Common_ThumbStickRight = m_Common.FindAction("ThumbStickRight", throwIfNotFound: true);
        m_Common_YButton = m_Common.FindAction("YButton", throwIfNotFound: true);
        m_Common_XButton = m_Common.FindAction("XButton", throwIfNotFound: true);
        m_Common_AButton = m_Common.FindAction("AButton", throwIfNotFound: true);
        m_Common_BButton = m_Common.FindAction("BButton", throwIfNotFound: true);
        m_Common_MainTriggerRight = m_Common.FindAction("MainTriggerRight", throwIfNotFound: true);
        m_Common_MainTriggerLeft = m_Common.FindAction("MainTriggerLeft", throwIfNotFound: true);
        m_Common_GripRight = m_Common.FindAction("GripRight", throwIfNotFound: true);
        m_Common_GripLeft = m_Common.FindAction("GripLeft", throwIfNotFound: true);
        m_Common_ThumbStickClickLeft = m_Common.FindAction("ThumbStickClickLeft", throwIfNotFound: true);
        m_Common_ThumbStickClickRight = m_Common.FindAction("ThumbStickClickRight", throwIfNotFound: true);
        m_Common_MenuButton = m_Common.FindAction("MenuButton", throwIfNotFound: true);
        // Tetris
        m_Tetris = asset.FindActionMap("Tetris", throwIfNotFound: true);
        m_Tetris_ThumbStickLeft = m_Tetris.FindAction("ThumbStickLeft", throwIfNotFound: true);
        m_Tetris_ThumbStickRight = m_Tetris.FindAction("ThumbStickRight", throwIfNotFound: true);
        m_Tetris_YButton = m_Tetris.FindAction("YButton", throwIfNotFound: true);
        m_Tetris_XButton = m_Tetris.FindAction("XButton", throwIfNotFound: true);
        m_Tetris_AButton = m_Tetris.FindAction("AButton", throwIfNotFound: true);
        m_Tetris_BButton = m_Tetris.FindAction("BButton", throwIfNotFound: true);
        m_Tetris_MainTriggerRight = m_Tetris.FindAction("MainTriggerRight", throwIfNotFound: true);
        m_Tetris_MainTriggerLeft = m_Tetris.FindAction("MainTriggerLeft", throwIfNotFound: true);
        m_Tetris_GripRight = m_Tetris.FindAction("GripRight", throwIfNotFound: true);
        m_Tetris_GripLeft = m_Tetris.FindAction("GripLeft", throwIfNotFound: true);
        m_Tetris_ThumbStickClickLeft = m_Tetris.FindAction("ThumbStickClickLeft", throwIfNotFound: true);
        m_Tetris_ThumbStickClickRight = m_Tetris.FindAction("ThumbStickClickRight", throwIfNotFound: true);
        m_Tetris_Left = m_Tetris.FindAction("Left", throwIfNotFound: true);
        m_Tetris_Right = m_Tetris.FindAction("Right", throwIfNotFound: true);
        m_Tetris_Up = m_Tetris.FindAction("Up", throwIfNotFound: true);
        m_Tetris_Down = m_Tetris.FindAction("Down", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Camera;
    private readonly InputAction m_Player_BrightnessUp;
    private readonly InputAction m_Player_BrightnessDown;
    private readonly InputAction m_Player_ButtonB;
    private readonly InputAction m_Player_ButtonA;
    private readonly InputAction m_Player_ThumbClickLeft;
    private readonly InputAction m_Player_ThumbClickRight;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Camera => m_Wrapper.m_Player_Camera;
        public InputAction @BrightnessUp => m_Wrapper.m_Player_BrightnessUp;
        public InputAction @BrightnessDown => m_Wrapper.m_Player_BrightnessDown;
        public InputAction @ButtonB => m_Wrapper.m_Player_ButtonB;
        public InputAction @ButtonA => m_Wrapper.m_Player_ButtonA;
        public InputAction @ThumbClickLeft => m_Wrapper.m_Player_ThumbClickLeft;
        public InputAction @ThumbClickRight => m_Wrapper.m_Player_ThumbClickRight;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Camera.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCamera;
                @BrightnessUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBrightnessUp;
                @BrightnessUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBrightnessUp;
                @BrightnessUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBrightnessUp;
                @BrightnessDown.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBrightnessDown;
                @BrightnessDown.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBrightnessDown;
                @BrightnessDown.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBrightnessDown;
                @ButtonB.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonB;
                @ButtonB.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonB;
                @ButtonB.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonB;
                @ButtonA.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonA;
                @ButtonA.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonA;
                @ButtonA.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnButtonA;
                @ThumbClickLeft.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThumbClickLeft;
                @ThumbClickLeft.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThumbClickLeft;
                @ThumbClickLeft.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThumbClickLeft;
                @ThumbClickRight.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThumbClickRight;
                @ThumbClickRight.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThumbClickRight;
                @ThumbClickRight.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnThumbClickRight;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @BrightnessUp.started += instance.OnBrightnessUp;
                @BrightnessUp.performed += instance.OnBrightnessUp;
                @BrightnessUp.canceled += instance.OnBrightnessUp;
                @BrightnessDown.started += instance.OnBrightnessDown;
                @BrightnessDown.performed += instance.OnBrightnessDown;
                @BrightnessDown.canceled += instance.OnBrightnessDown;
                @ButtonB.started += instance.OnButtonB;
                @ButtonB.performed += instance.OnButtonB;
                @ButtonB.canceled += instance.OnButtonB;
                @ButtonA.started += instance.OnButtonA;
                @ButtonA.performed += instance.OnButtonA;
                @ButtonA.canceled += instance.OnButtonA;
                @ThumbClickLeft.started += instance.OnThumbClickLeft;
                @ThumbClickLeft.performed += instance.OnThumbClickLeft;
                @ThumbClickLeft.canceled += instance.OnThumbClickLeft;
                @ThumbClickRight.started += instance.OnThumbClickRight;
                @ThumbClickRight.performed += instance.OnThumbClickRight;
                @ThumbClickRight.canceled += instance.OnThumbClickRight;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Setup
    private readonly InputActionMap m_Setup;
    private ISetupActions m_SetupActionsCallbackInterface;
    private readonly InputAction m_Setup_RotateXY;
    private readonly InputAction m_Setup_RotateZoom;
    private readonly InputAction m_Setup_BrightnessUp;
    private readonly InputAction m_Setup_BrightnessDown;
    private readonly InputAction m_Setup_ButtonA;
    private readonly InputAction m_Setup_ButtonB;
    private readonly InputAction m_Setup_RightTrigger;
    public struct SetupActions
    {
        private @Controls m_Wrapper;
        public SetupActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @RotateXY => m_Wrapper.m_Setup_RotateXY;
        public InputAction @RotateZoom => m_Wrapper.m_Setup_RotateZoom;
        public InputAction @BrightnessUp => m_Wrapper.m_Setup_BrightnessUp;
        public InputAction @BrightnessDown => m_Wrapper.m_Setup_BrightnessDown;
        public InputAction @ButtonA => m_Wrapper.m_Setup_ButtonA;
        public InputAction @ButtonB => m_Wrapper.m_Setup_ButtonB;
        public InputAction @RightTrigger => m_Wrapper.m_Setup_RightTrigger;
        public InputActionMap Get() { return m_Wrapper.m_Setup; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SetupActions set) { return set.Get(); }
        public void SetCallbacks(ISetupActions instance)
        {
            if (m_Wrapper.m_SetupActionsCallbackInterface != null)
            {
                @RotateXY.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnRotateXY;
                @RotateXY.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnRotateXY;
                @RotateXY.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnRotateXY;
                @RotateZoom.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnRotateZoom;
                @RotateZoom.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnRotateZoom;
                @RotateZoom.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnRotateZoom;
                @BrightnessUp.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnBrightnessUp;
                @BrightnessUp.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnBrightnessUp;
                @BrightnessUp.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnBrightnessUp;
                @BrightnessDown.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnBrightnessDown;
                @BrightnessDown.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnBrightnessDown;
                @BrightnessDown.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnBrightnessDown;
                @ButtonA.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnButtonA;
                @ButtonA.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnButtonA;
                @ButtonA.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnButtonA;
                @ButtonB.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnButtonB;
                @ButtonB.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnButtonB;
                @ButtonB.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnButtonB;
                @RightTrigger.started -= m_Wrapper.m_SetupActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.performed -= m_Wrapper.m_SetupActionsCallbackInterface.OnRightTrigger;
                @RightTrigger.canceled -= m_Wrapper.m_SetupActionsCallbackInterface.OnRightTrigger;
            }
            m_Wrapper.m_SetupActionsCallbackInterface = instance;
            if (instance != null)
            {
                @RotateXY.started += instance.OnRotateXY;
                @RotateXY.performed += instance.OnRotateXY;
                @RotateXY.canceled += instance.OnRotateXY;
                @RotateZoom.started += instance.OnRotateZoom;
                @RotateZoom.performed += instance.OnRotateZoom;
                @RotateZoom.canceled += instance.OnRotateZoom;
                @BrightnessUp.started += instance.OnBrightnessUp;
                @BrightnessUp.performed += instance.OnBrightnessUp;
                @BrightnessUp.canceled += instance.OnBrightnessUp;
                @BrightnessDown.started += instance.OnBrightnessDown;
                @BrightnessDown.performed += instance.OnBrightnessDown;
                @BrightnessDown.canceled += instance.OnBrightnessDown;
                @ButtonA.started += instance.OnButtonA;
                @ButtonA.performed += instance.OnButtonA;
                @ButtonA.canceled += instance.OnButtonA;
                @ButtonB.started += instance.OnButtonB;
                @ButtonB.performed += instance.OnButtonB;
                @ButtonB.canceled += instance.OnButtonB;
                @RightTrigger.started += instance.OnRightTrigger;
                @RightTrigger.performed += instance.OnRightTrigger;
                @RightTrigger.canceled += instance.OnRightTrigger;
            }
        }
    }
    public SetupActions @Setup => new SetupActions(this);

    // Common
    private readonly InputActionMap m_Common;
    private ICommonActions m_CommonActionsCallbackInterface;
    private readonly InputAction m_Common_ThumbStickLeft;
    private readonly InputAction m_Common_ThumbStickRight;
    private readonly InputAction m_Common_YButton;
    private readonly InputAction m_Common_XButton;
    private readonly InputAction m_Common_AButton;
    private readonly InputAction m_Common_BButton;
    private readonly InputAction m_Common_MainTriggerRight;
    private readonly InputAction m_Common_MainTriggerLeft;
    private readonly InputAction m_Common_GripRight;
    private readonly InputAction m_Common_GripLeft;
    private readonly InputAction m_Common_ThumbStickClickLeft;
    private readonly InputAction m_Common_ThumbStickClickRight;
    private readonly InputAction m_Common_MenuButton;
    public struct CommonActions
    {
        private @Controls m_Wrapper;
        public CommonActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ThumbStickLeft => m_Wrapper.m_Common_ThumbStickLeft;
        public InputAction @ThumbStickRight => m_Wrapper.m_Common_ThumbStickRight;
        public InputAction @YButton => m_Wrapper.m_Common_YButton;
        public InputAction @XButton => m_Wrapper.m_Common_XButton;
        public InputAction @AButton => m_Wrapper.m_Common_AButton;
        public InputAction @BButton => m_Wrapper.m_Common_BButton;
        public InputAction @MainTriggerRight => m_Wrapper.m_Common_MainTriggerRight;
        public InputAction @MainTriggerLeft => m_Wrapper.m_Common_MainTriggerLeft;
        public InputAction @GripRight => m_Wrapper.m_Common_GripRight;
        public InputAction @GripLeft => m_Wrapper.m_Common_GripLeft;
        public InputAction @ThumbStickClickLeft => m_Wrapper.m_Common_ThumbStickClickLeft;
        public InputAction @ThumbStickClickRight => m_Wrapper.m_Common_ThumbStickClickRight;
        public InputAction @MenuButton => m_Wrapper.m_Common_MenuButton;
        public InputActionMap Get() { return m_Wrapper.m_Common; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommonActions set) { return set.Get(); }
        public void SetCallbacks(ICommonActions instance)
        {
            if (m_Wrapper.m_CommonActionsCallbackInterface != null)
            {
                @ThumbStickLeft.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickLeft;
                @ThumbStickLeft.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickLeft;
                @ThumbStickLeft.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickLeft;
                @ThumbStickRight.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickRight;
                @ThumbStickRight.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickRight;
                @ThumbStickRight.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickRight;
                @YButton.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnYButton;
                @YButton.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnYButton;
                @YButton.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnYButton;
                @XButton.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnXButton;
                @XButton.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnXButton;
                @XButton.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnXButton;
                @AButton.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnAButton;
                @AButton.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnAButton;
                @AButton.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnAButton;
                @BButton.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnBButton;
                @BButton.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnBButton;
                @BButton.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnBButton;
                @MainTriggerRight.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainTriggerRight;
                @MainTriggerRight.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainTriggerRight;
                @MainTriggerRight.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainTriggerRight;
                @MainTriggerLeft.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainTriggerLeft;
                @MainTriggerLeft.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainTriggerLeft;
                @MainTriggerLeft.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMainTriggerLeft;
                @GripRight.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnGripRight;
                @GripRight.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnGripRight;
                @GripRight.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnGripRight;
                @GripLeft.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnGripLeft;
                @GripLeft.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnGripLeft;
                @GripLeft.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnGripLeft;
                @ThumbStickClickLeft.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickClickLeft;
                @ThumbStickClickLeft.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickClickLeft;
                @ThumbStickClickLeft.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickClickLeft;
                @ThumbStickClickRight.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickClickRight;
                @ThumbStickClickRight.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickClickRight;
                @ThumbStickClickRight.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnThumbStickClickRight;
                @MenuButton.started -= m_Wrapper.m_CommonActionsCallbackInterface.OnMenuButton;
                @MenuButton.performed -= m_Wrapper.m_CommonActionsCallbackInterface.OnMenuButton;
                @MenuButton.canceled -= m_Wrapper.m_CommonActionsCallbackInterface.OnMenuButton;
            }
            m_Wrapper.m_CommonActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ThumbStickLeft.started += instance.OnThumbStickLeft;
                @ThumbStickLeft.performed += instance.OnThumbStickLeft;
                @ThumbStickLeft.canceled += instance.OnThumbStickLeft;
                @ThumbStickRight.started += instance.OnThumbStickRight;
                @ThumbStickRight.performed += instance.OnThumbStickRight;
                @ThumbStickRight.canceled += instance.OnThumbStickRight;
                @YButton.started += instance.OnYButton;
                @YButton.performed += instance.OnYButton;
                @YButton.canceled += instance.OnYButton;
                @XButton.started += instance.OnXButton;
                @XButton.performed += instance.OnXButton;
                @XButton.canceled += instance.OnXButton;
                @AButton.started += instance.OnAButton;
                @AButton.performed += instance.OnAButton;
                @AButton.canceled += instance.OnAButton;
                @BButton.started += instance.OnBButton;
                @BButton.performed += instance.OnBButton;
                @BButton.canceled += instance.OnBButton;
                @MainTriggerRight.started += instance.OnMainTriggerRight;
                @MainTriggerRight.performed += instance.OnMainTriggerRight;
                @MainTriggerRight.canceled += instance.OnMainTriggerRight;
                @MainTriggerLeft.started += instance.OnMainTriggerLeft;
                @MainTriggerLeft.performed += instance.OnMainTriggerLeft;
                @MainTriggerLeft.canceled += instance.OnMainTriggerLeft;
                @GripRight.started += instance.OnGripRight;
                @GripRight.performed += instance.OnGripRight;
                @GripRight.canceled += instance.OnGripRight;
                @GripLeft.started += instance.OnGripLeft;
                @GripLeft.performed += instance.OnGripLeft;
                @GripLeft.canceled += instance.OnGripLeft;
                @ThumbStickClickLeft.started += instance.OnThumbStickClickLeft;
                @ThumbStickClickLeft.performed += instance.OnThumbStickClickLeft;
                @ThumbStickClickLeft.canceled += instance.OnThumbStickClickLeft;
                @ThumbStickClickRight.started += instance.OnThumbStickClickRight;
                @ThumbStickClickRight.performed += instance.OnThumbStickClickRight;
                @ThumbStickClickRight.canceled += instance.OnThumbStickClickRight;
                @MenuButton.started += instance.OnMenuButton;
                @MenuButton.performed += instance.OnMenuButton;
                @MenuButton.canceled += instance.OnMenuButton;
            }
        }
    }
    public CommonActions @Common => new CommonActions(this);

    // Tetris
    private readonly InputActionMap m_Tetris;
    private ITetrisActions m_TetrisActionsCallbackInterface;
    private readonly InputAction m_Tetris_ThumbStickLeft;
    private readonly InputAction m_Tetris_ThumbStickRight;
    private readonly InputAction m_Tetris_YButton;
    private readonly InputAction m_Tetris_XButton;
    private readonly InputAction m_Tetris_AButton;
    private readonly InputAction m_Tetris_BButton;
    private readonly InputAction m_Tetris_MainTriggerRight;
    private readonly InputAction m_Tetris_MainTriggerLeft;
    private readonly InputAction m_Tetris_GripRight;
    private readonly InputAction m_Tetris_GripLeft;
    private readonly InputAction m_Tetris_ThumbStickClickLeft;
    private readonly InputAction m_Tetris_ThumbStickClickRight;
    private readonly InputAction m_Tetris_Left;
    private readonly InputAction m_Tetris_Right;
    private readonly InputAction m_Tetris_Up;
    private readonly InputAction m_Tetris_Down;
    public struct TetrisActions
    {
        private @Controls m_Wrapper;
        public TetrisActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ThumbStickLeft => m_Wrapper.m_Tetris_ThumbStickLeft;
        public InputAction @ThumbStickRight => m_Wrapper.m_Tetris_ThumbStickRight;
        public InputAction @YButton => m_Wrapper.m_Tetris_YButton;
        public InputAction @XButton => m_Wrapper.m_Tetris_XButton;
        public InputAction @AButton => m_Wrapper.m_Tetris_AButton;
        public InputAction @BButton => m_Wrapper.m_Tetris_BButton;
        public InputAction @MainTriggerRight => m_Wrapper.m_Tetris_MainTriggerRight;
        public InputAction @MainTriggerLeft => m_Wrapper.m_Tetris_MainTriggerLeft;
        public InputAction @GripRight => m_Wrapper.m_Tetris_GripRight;
        public InputAction @GripLeft => m_Wrapper.m_Tetris_GripLeft;
        public InputAction @ThumbStickClickLeft => m_Wrapper.m_Tetris_ThumbStickClickLeft;
        public InputAction @ThumbStickClickRight => m_Wrapper.m_Tetris_ThumbStickClickRight;
        public InputAction @Left => m_Wrapper.m_Tetris_Left;
        public InputAction @Right => m_Wrapper.m_Tetris_Right;
        public InputAction @Up => m_Wrapper.m_Tetris_Up;
        public InputAction @Down => m_Wrapper.m_Tetris_Down;
        public InputActionMap Get() { return m_Wrapper.m_Tetris; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TetrisActions set) { return set.Get(); }
        public void SetCallbacks(ITetrisActions instance)
        {
            if (m_Wrapper.m_TetrisActionsCallbackInterface != null)
            {
                @ThumbStickLeft.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickLeft;
                @ThumbStickLeft.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickLeft;
                @ThumbStickLeft.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickLeft;
                @ThumbStickRight.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickRight;
                @ThumbStickRight.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickRight;
                @ThumbStickRight.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickRight;
                @YButton.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnYButton;
                @YButton.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnYButton;
                @YButton.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnYButton;
                @XButton.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnXButton;
                @XButton.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnXButton;
                @XButton.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnXButton;
                @AButton.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnAButton;
                @AButton.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnAButton;
                @AButton.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnAButton;
                @BButton.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnBButton;
                @BButton.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnBButton;
                @BButton.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnBButton;
                @MainTriggerRight.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnMainTriggerRight;
                @MainTriggerRight.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnMainTriggerRight;
                @MainTriggerRight.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnMainTriggerRight;
                @MainTriggerLeft.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnMainTriggerLeft;
                @MainTriggerLeft.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnMainTriggerLeft;
                @MainTriggerLeft.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnMainTriggerLeft;
                @GripRight.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnGripRight;
                @GripRight.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnGripRight;
                @GripRight.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnGripRight;
                @GripLeft.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnGripLeft;
                @GripLeft.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnGripLeft;
                @GripLeft.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnGripLeft;
                @ThumbStickClickLeft.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickClickLeft;
                @ThumbStickClickLeft.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickClickLeft;
                @ThumbStickClickLeft.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickClickLeft;
                @ThumbStickClickRight.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickClickRight;
                @ThumbStickClickRight.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickClickRight;
                @ThumbStickClickRight.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnThumbStickClickRight;
                @Left.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnRight;
                @Up.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_TetrisActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_TetrisActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_TetrisActionsCallbackInterface.OnDown;
            }
            m_Wrapper.m_TetrisActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ThumbStickLeft.started += instance.OnThumbStickLeft;
                @ThumbStickLeft.performed += instance.OnThumbStickLeft;
                @ThumbStickLeft.canceled += instance.OnThumbStickLeft;
                @ThumbStickRight.started += instance.OnThumbStickRight;
                @ThumbStickRight.performed += instance.OnThumbStickRight;
                @ThumbStickRight.canceled += instance.OnThumbStickRight;
                @YButton.started += instance.OnYButton;
                @YButton.performed += instance.OnYButton;
                @YButton.canceled += instance.OnYButton;
                @XButton.started += instance.OnXButton;
                @XButton.performed += instance.OnXButton;
                @XButton.canceled += instance.OnXButton;
                @AButton.started += instance.OnAButton;
                @AButton.performed += instance.OnAButton;
                @AButton.canceled += instance.OnAButton;
                @BButton.started += instance.OnBButton;
                @BButton.performed += instance.OnBButton;
                @BButton.canceled += instance.OnBButton;
                @MainTriggerRight.started += instance.OnMainTriggerRight;
                @MainTriggerRight.performed += instance.OnMainTriggerRight;
                @MainTriggerRight.canceled += instance.OnMainTriggerRight;
                @MainTriggerLeft.started += instance.OnMainTriggerLeft;
                @MainTriggerLeft.performed += instance.OnMainTriggerLeft;
                @MainTriggerLeft.canceled += instance.OnMainTriggerLeft;
                @GripRight.started += instance.OnGripRight;
                @GripRight.performed += instance.OnGripRight;
                @GripRight.canceled += instance.OnGripRight;
                @GripLeft.started += instance.OnGripLeft;
                @GripLeft.performed += instance.OnGripLeft;
                @GripLeft.canceled += instance.OnGripLeft;
                @ThumbStickClickLeft.started += instance.OnThumbStickClickLeft;
                @ThumbStickClickLeft.performed += instance.OnThumbStickClickLeft;
                @ThumbStickClickLeft.canceled += instance.OnThumbStickClickLeft;
                @ThumbStickClickRight.started += instance.OnThumbStickClickRight;
                @ThumbStickClickRight.performed += instance.OnThumbStickClickRight;
                @ThumbStickClickRight.canceled += instance.OnThumbStickClickRight;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
            }
        }
    }
    public TetrisActions @Tetris => new TetrisActions(this);
    public interface IPlayerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnBrightnessUp(InputAction.CallbackContext context);
        void OnBrightnessDown(InputAction.CallbackContext context);
        void OnButtonB(InputAction.CallbackContext context);
        void OnButtonA(InputAction.CallbackContext context);
        void OnThumbClickLeft(InputAction.CallbackContext context);
        void OnThumbClickRight(InputAction.CallbackContext context);
    }
    public interface ISetupActions
    {
        void OnRotateXY(InputAction.CallbackContext context);
        void OnRotateZoom(InputAction.CallbackContext context);
        void OnBrightnessUp(InputAction.CallbackContext context);
        void OnBrightnessDown(InputAction.CallbackContext context);
        void OnButtonA(InputAction.CallbackContext context);
        void OnButtonB(InputAction.CallbackContext context);
        void OnRightTrigger(InputAction.CallbackContext context);
    }
    public interface ICommonActions
    {
        void OnThumbStickLeft(InputAction.CallbackContext context);
        void OnThumbStickRight(InputAction.CallbackContext context);
        void OnYButton(InputAction.CallbackContext context);
        void OnXButton(InputAction.CallbackContext context);
        void OnAButton(InputAction.CallbackContext context);
        void OnBButton(InputAction.CallbackContext context);
        void OnMainTriggerRight(InputAction.CallbackContext context);
        void OnMainTriggerLeft(InputAction.CallbackContext context);
        void OnGripRight(InputAction.CallbackContext context);
        void OnGripLeft(InputAction.CallbackContext context);
        void OnThumbStickClickLeft(InputAction.CallbackContext context);
        void OnThumbStickClickRight(InputAction.CallbackContext context);
        void OnMenuButton(InputAction.CallbackContext context);
    }
    public interface ITetrisActions
    {
        void OnThumbStickLeft(InputAction.CallbackContext context);
        void OnThumbStickRight(InputAction.CallbackContext context);
        void OnYButton(InputAction.CallbackContext context);
        void OnXButton(InputAction.CallbackContext context);
        void OnAButton(InputAction.CallbackContext context);
        void OnBButton(InputAction.CallbackContext context);
        void OnMainTriggerRight(InputAction.CallbackContext context);
        void OnMainTriggerLeft(InputAction.CallbackContext context);
        void OnGripRight(InputAction.CallbackContext context);
        void OnGripLeft(InputAction.CallbackContext context);
        void OnThumbStickClickLeft(InputAction.CallbackContext context);
        void OnThumbStickClickRight(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
    }
}
